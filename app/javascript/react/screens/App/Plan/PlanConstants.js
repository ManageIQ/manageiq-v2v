export const FETCH_V2V_PLAN_REQUEST = 'FETCH_V2V_PLAN_REQUEST';
export const FETCH_V2V_PLAN = 'FETCH_V2V_PLAN';
export const FETCH_V2V_ALL_REQUESTS_WITH_TASKS_FOR_PLAN = 'FETCH_V2V_ALL_REQUESTS_WITH_TASKS_FOR_PLAN';
export const QUERY_V2V_PLAN_VMS = 'QUERY_V2V_PLAN_VMS';
export const RESET_PLAN_STATE = 'RESET_PLAN_STATE';
export const FETCH_V2V_MIGRATION_TASK_LOG = 'FETCH_V2V_MIGRATION_TASK_LOG';
export const DOWNLOAD_LOG_CLICKED = 'DOWNLOAD_LOG_CLICKED';
export const DOWNLOAD_LOG_COMPLETED = 'DOWNLOAD_LOG_COMPLETED';
export const FETCH_V2V_ANSIBLE_PLAYBOOK_TEMPLATE = 'FETCH_V2V_ANSIBLE_PLAYBOOK_TEMPLATE';
export const FETCH_V2V_ORCHESTRATION_STACK = 'FETCH_V2V_ORCHESTRATION_STACK';
export const CANCEL_V2V_PLAN_REQUEST_TASKS = 'CANCEL_V2V_PLAN_REQUEST_TASKS';

export const STATUS_MESSAGE_KEYS = {
  ACQUIRE_TRANSFORMATION_HOST: 'Acquire Transformation Host',
  ASSESS_MIGRATION: 'Assess Migration',
  AUTOMATION_STARTING: 'Automation Starting',
  COLLAPSE_SNAPSHOTS: 'Collapse Snapshots',
  CONVERT_DISKS: 'Convert disks',
  SOURCE_MIGRATED: 'Mark source as migrated',
  MIGRATING: 'Migrating',
  MIGRATION_COMPLETE: 'Migration complete',
  POST_MIGRATION: 'Post-migration',
  POWER_OFF: 'Power off',
  POWER_ON: 'Power-on VM',
  PRE_MIGRATION: 'Pre-migration',
  REFRESH_INVENTORY: 'Refresh inventory',
  RESTORE_VM_ATTRIBUTES: 'Restore VM Attributes',
  MIGRATE_VM: 'Transform VM',
  UPDATE_DESCRIPTION: 'Update description of VM',
  VALIDATING: 'Validating',
  VM_MIGRATIONS_COMPLETED: 'VM Transformations completed',
  VM_MIGRATED: 'Virtual machine migrated',
  VM_MIGRATIONS_FAILED: 'VM Transformations failed',
  CANCELLED: 'VM cancelled'
};

const STATUS_MESSAGES = {};
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.ACQUIRE_TRANSFORMATION_HOST] = __('Acquire Transformation Host');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.ASSESS_MIGRATION] = __('Assess Migration');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.AUTOMATION_STARTING] = __('Automation Starting');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.COLLAPSE_SNAPSHOTS] = __('Collapse Snapshots');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.CONVERT_DISKS] = __('Convert disks');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.SOURCE_MIGRATED] = __('Mark source as migrated');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.MIGRATING] = __('Migrating');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.MIGRATION_COMPLETE] = __('Migration complete');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.POST_MIGRATION] = __('Post-migration');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.POWER_OFF] = __('Power off');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.POWER_ON] = __('Power-on VM');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.PRE_MIGRATION] = __('Pre-migration');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.REFRESH_INVENTORY] = __('Refresh inventory');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.RESTORE_VM_ATTRIBUTES] = __('Restore VM Attributes');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.MIGRATE_VM] = __('Migrate VM');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.UPDATE_DESCRIPTION] = __('Update description of VM');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.VALIDATING] = __('Validating');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.VM_MIGRATIONS_COMPLETED] = __('VM migrations completed');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.VM_MIGRATED] = __('Virtual machine migrated');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.VM_MIGRATIONS_FAILED] = __('VM migrations failed');
STATUS_MESSAGES[STATUS_MESSAGE_KEYS.CANCELLED] = __('VM cancelled');

export { STATUS_MESSAGES as V2V_MIGRATION_STATUS_MESSAGES };
